kind: pipeline
name: default

steps:
- name: prepare
  image: google/dart:2.2.0
  volumes:
  - name: pub-cache
    path: /root/.pub-cache
  commands:
  - pub get

#- name: build_runner
#  image: google/dart:2.2.0
#  volumes:
#  - name: pub-cache
#    path: /root/.pub-cache
#  commands:
#  - pub run build_runner build

- name: format
  image: google/dart:2.2.0
  volumes:
  - name: pub-cache
    path: /root/.pub-cache
  commands:
  - dartfmt --dry-run --set-exit-if-changed .

- name: analyze
  image: google/dart:2.2.0
  volumes:
  - name: pub-cache
    path: /root/.pub-cache
  commands:
  - dartanalyzer --fatal-infos --fatal-warnings .

- name: test
  image: google/dart:2.2.0
  volumes:
  - name: pub-cache
    path: /root/.pub-cache
  commands:
  - pub run test --run-skipped

- name: publish-check
  image: google/dart:2.2.0
  volumes:
  - name: pub-cache
    path: /root/.pub-cache
  commands:
  - pub publish --dry-run

volumes:
- name: pub-cache
  temp: {}

#---
#kind: pipeline
#name: publish
#
#steps:
#- name: restore-cache
#  image: alpine:3.9.3
#  volumes:
#  - name: pub-cache
#    path: /root/.pub-cache
#  commands:
#  - FLUTTER_HOME=/root/.pub-cache
#  - wget -P $FLUTTER_HOME https://raw.githubusercontent.com/v7lin/pub_credentials/master/credentials.json.enc
#
#- name: restore-cache-openssl
#  image: v7lin/openssl:1.1.1b
#  volumes:
#  - name: pub-cache
#    path: /root/.pub-cache
#  environment:
#    ENC_METHOD:
#      from_secret: ENC_METHOD
#    ENC_PASSWORD:
#      from_secret: ENC_PASSWORD
#  commands:
#  - FLUTTER_HOME=/root/.pub-cache
#  - openssl enc -d -$ENC_METHOD -k $ENC_PASSWORD -in $FLUTTER_HOME/credentials.json.enc -out $FLUTTER_HOME/credentials.json
#  - rm $FLUTTER_HOME/credentials.json.enc
#
#- name: publish
#  image: v7lin/flutter:1.7.8-hotfix.3-stable
#  volumes:
#  - name: pub-cache
#    path: /root/.pub-cache
#  commands:
#  - echo "y" | flutter packages pub publish
#
#- name: save-cache-openssl
#  image: v7lin/openssl:1.1.1b
#  volumes:
#  - name: pub-cache
#    path: /root/.pub-cache
#  environment:
#    ENC_METHOD:
#      from_secret: ENC_METHOD
#    ENC_PASSWORD:
#      from_secret: ENC_PASSWORD
#  commands:
#  - FLUTTER_HOME=/root/.pub-cache
#  - openssl enc -e -$ENC_METHOD -k $ENC_PASSWORD -in $FLUTTER_HOME/credentials.json -out $FLUTTER_HOME/credentials.json.enc
#  - rm /root/.pub-cache/credentials.json
#
#- name: save-cache
#  image: docker:git
#  volumes:
#  - name: pub-cache
#    path: /root/.pub-cache
#  environment:
#    GIT_USER_EMAIL:
#      from_secret: GIT_USER_EMAIL
#    GIT_USER_NAME:
#      from_secret: GIT_USER_NAME
#    GIT_USER_PASSWORD:
#      from_secret: GIT_USER_PASSWORD # 密码含'@'，用'%40'替换 -> URLEncoder.encode("@","utf-8");
#  commands:
#  - FLUTTER_HOME=/root/.pub-cache
#  - git config --global user.email $GIT_USER_EMAIL
#  - git config --global user.name $GIT_USER_NAME
#  - git config --global credential.helper store
#  - git clone -b master https://$GIT_USER_NAME:$GIT_USER_PASSWORD@github.com/v7lin/pub_credentials.git $FLUTTER_HOME/pub_credentials
#  - rm $FLUTTER_HOME/pub_credentials/credentials.json.enc
#  - mv $FLUTTER_HOME/credentials.json.enc $FLUTTER_HOME/pub_credentials/credentials.json.enc
#  - cd $FLUTTER_HOME/pub_credentials
#  - git commit -am "update credentials by ci/cd tools"
#  - git push
#
#volumes:
#- name: pub-cache
#  temp: {}
#
#trigger:
#  status:
#  - success
#  event:
#  - tag
#
#depends_on:
#- default
